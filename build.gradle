plugins {
    id 'nebula.kotlin' version '1.2.50'
    id 'nebula.maven-publish' version '5.1.0'
    id 'nebula.info' version '3.7.1'
    id "nebula.source-jar" version "8.0.0"
    id "nebula.javadoc-jar" version "8.0.0"
    id 'nebula.nebula-bintray-publishing' version '3.5.2'
    id 'nebula.release' version '6.3.3'
}

apply from: 'publishing.gradle'
allprojects {
    group = "com.tylerthrailkill"
    version = gradle.version
}

group 'com.tylerthrailkill'
version = gradle.version

repositories {
    mavenCentral()
    mavenLocal()
}
def axonVersion = '3.2.2'

dependencies {
//    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.41"
    compile group: "org.axonframework", name: "axon-core", version: axonVersion
    compile group: "org.axonframework", name: "axon-test", version: axonVersion
    compile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.0.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"

    testCompile "org.jetbrains.kotlin:kotlin-test:1.2.41"
    testCompile group: "org.axonframework", name: "axon-core", version: axonVersion
    testCompile group: "org.axonframework", name: "axon-test", version: axonVersion
}

test {
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

//compileKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}

//compileTestKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}

//noArg {
//    annotation("org.axonframework.commandhandling.model.AggregateRoot")
//}
