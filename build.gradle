plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.41"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.2.50"
    id "com.jfrog.bintray" version "1.8.2"
    id "com.jfrog.artifactory" version "4.7.4"
    id 'nebula.provided-base' version '3.0.3' // if you want provided-base
}

apply plugin: 'maven'
apply plugin: 'signing'
apply from: 'publishing.gradle'

group 'com.tylerthrailkill'
version = gradle.version

repositories {
    mavenCentral()
    mavenLocal()
}
def axonVersion = '3.2.2'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.41"
    compile group: "org.axonframework", name: "axon-core", version: axonVersion
    compile group: "org.axonframework", name: "axon-test", version: axonVersion
    compile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.0.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"

    testCompile "org.jetbrains.kotlin:kotlin-test:1.2.41"
    testCompile group: "org.axonframework", name: "axon-core", version: axonVersion
    testCompile group: "org.axonframework", name: "axon-test", version: axonVersion
}

test {
    useJUnitPlatform()

    // Always run tests, even when nothing changed.
    dependsOn 'cleanTest'

    // Show test results.
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

noArg {
    annotation("org.axonframework.commandhandling.model.AggregateRoot")
}
